name: Frontend Build

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
  AWS_REGION: "ap-southeast-1"
  POSTS_CONTENT_BUCKET_NAME: "be-awesome-dev-posts"
  BUILD_ARTIFACT_BUCKET_NAME: "be-awesome-dev-build-artifact"
  TEMP_BUILD_ARTIFACT_BUCKET_NAME: "be-awesome-dev-temporary-build-artifact"
  CLOUDFRONT_DISTRIBUTION_ID: "E3OHZDGF4P6D7N"

jobs:
  FrontEndBuild:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-end

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::629872170007:role/BeAwesomeDevGithubActionWorkflowBuildPipeline
          role-session-name: github-action-role-session
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: npm install

      - name: Build Next.js project
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}" >> .env.production 
          npm run build

      - name: Archive front-end build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: front-end-build-artifact
          path: ./front-end/out

  UploadBuildArtifactToS3:
    needs: FrontEndBuild
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::629872170007:role/BeAwesomeDevGithubActionWorkflowBuildPipeline
          role-session-name: github-action-role-session
          aws-region: ${{ env.AWS_REGION }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: front-end-build-artifact
          path: ./front-end-build-artifact

      - name: Upload build artifact to temporary S3 bucket
        working-directory: ./front-end-build-artifact
        run: aws s3 cp . s3://${{ env.TEMP_BUILD_ARTIFACT_BUCKET_NAME }} --recursive

      - name: Sync build artifact between temporary S3 bucket with official bucket
        run: aws s3 sync s3://${{ env.TEMP_BUILD_ARTIFACT_BUCKET_NAME }} s3://${{ env.BUILD_ARTIFACT_BUCKET_NAME }} --delete

      - name: Create invalidation in CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
